type ModelUserConnection @aws_iam @aws_cognito_user_pools {
  items: [User]!
  nextToken: String
  scannedCount: Int
  count: Int
}

type ModelPostConnection @aws_iam @aws_cognito_user_pools {
  items: [Post]!
  nextToken: String
  scannedCount: Int
  count: Int
}

type ModelLikeConnection @aws_iam @aws_cognito_user_pools {
  items: [Like]!
  nextToken: String
  scannedCount: Int
  count: Int
}

type ModelShareConnection @aws_iam @aws_cognito_user_pools {
  items: [Share]!
  nextToken: String
  scannedCount: Int
  count: Int
}

type ModelCommentConnection @aws_iam @aws_cognito_user_pools {
  items: [Comment]!
  nextToken: String
  scannedCount: Int
  count: Int
}

type User @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String
  username: String!
  email: String!
  avatar: String!
  posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
}

type Post @model @auth(rules: [{ allow: private }]) {
  id: ID!
  videoUri: String!
  description: String
  userID: ID! @index(name: "byUser")
  user: User! @belongsTo(fields: ["userID"])
  songID: ID @index(name: "bySong")
  song: Song @belongsTo(fields: ["songID"])
  likes: [Like] @hasMany(indexName: "byPost", fields: ["id"])
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  shares: [Share] @hasMany(indexName: "byPost", fields: ["id"])
}

type Song @model @auth(rules: [{ allow: private }]) {
  id: ID!
  artist: String!
  name: String!
  coverUri: String!
  audioUri: String!
  posts: [Post] @hasMany(indexName: "bySong", fields: ["id"])
}

type Like @model @auth(rules: [{ allow: private }]) {
  id: ID!
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  userID: ID! @index(name: "byUser")
}

type Comment @model @auth(rules: [{ allow: private }]) {
  id: ID!
  content: String!
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  userID: ID! @index(name: "byUser")
}

type Share @model @auth(rules: [{ allow: private }]) {
  id: ID!
  social: String
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  userID: ID! @index(name: "byUser")
}
