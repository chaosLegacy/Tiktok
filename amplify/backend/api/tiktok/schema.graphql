# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String!
  userName: String!
  email: String!
  avatar: String!
  posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
}

type Post @model @auth(rules: [{ allow: private }]) {
  id: ID!
  videoUri: String!
  description: String
  userID: ID! @index(name: "byUser")
  song: Song! @hasOne
  likes: [Like] @hasMany(indexName: "byPost", fields: ["id"])
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  shares: [Share] @hasMany(indexName: "byPost", fields: ["id"])
}

type Song @model @auth(rules: [{ allow: private }]) {
  id: ID!
  artist: String!
  name: String!
  coverUri: String!
  audioUri: String!
  post: Post @belongsTo
}

type Like @model @auth(rules: [{ allow: private }]) {
  id: ID!
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  user: User! @hasOne
}

type Comment @model @auth(rules: [{ allow: private }]) {
  id: ID!
  content: String!
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  user: User! @hasOne
}

type Share @model @auth(rules: [{ allow: private }]) {
  id: ID!
  social: String
  postID: ID! @index(name: "byPost")
  post: Post! @belongsTo(fields: ["postID"])
  user: User! @hasOne
}
